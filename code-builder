#!/usr/bin/env python

#############################################################################
# Author  : Jerome ODIER, Christophe SMEKENS
# Email   : odier@hypnos3d.com, smekens@hypnos3d.com
#
# Version : 1.0 beta (2012)
#
#
# This file is part of CODE-BUILDER.
#
#  u-autotool is free software; you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published
#  by the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  u-autotool is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################

import sys

import cb.utils
import cb.parser
import cb.checker

#############################################################################

try:
	import os, xml.dom.minidom

except ImportError, e:
	cb.utils.fatal(e)

#############################################################################
# VARIABLES								    #
#############################################################################

CTX = {
	'int_asset': {},
	'int_types': {},
	'int_profiles': {},
	'int_constraints': {},
	'int_extensions': [],

	'imp_extras': [],
	'imp_inits': [],
	'imp_profiles': {},

	'options': None,
	'lang': None,

	'debug': 0,
	'ooops': 0,
	'error': 0,
}

#############################################################################
# CODE-BUILDER								    #
#############################################################################

def codebuilder_load(fileName):
	#####################################################################

	try:
		doc = xml.dom.minidom.parse(fileName)

	except:
		print('[Error] XML error in file `%s` !' % fileName)

		sys.exit(1)

	#####################################################################

	cb.parser.parseInterface(CTX,
		doc.getElementsByTagName('interface')
	)

	cb.parser.parseImplementation(CTX,
		doc.getElementsByTagName('implementation')
	)

#############################################################################

def codebuilder_check():
	cb.checker.interface(CTX)
	cb.checker.implementation(CTX)

	cb.utils.status(CTX)

#############################################################################

def codebuilder_emit():
	pass

#############################################################################

from optparse import OptionParser

#############################################################################

if __name__ == '__main__':
	#####################################################################

	parser = OptionParser('usage: %prog [options] [filename]')

	parser.add_option('-a', '--authors',
			action='store_true', dest='authors', help='show authors')
	parser.add_option('-v', '--version',
			action='store_true', dest='version', help='show version')
	parser.add_option('-l', '--lang',
			action='store', dest='lang', help='???')
	parser.add_option('', '--verbose',
			action='store_true', dest='verbose', help='set this program verbose')

	(options, args) = parser.parse_args()

	CTX['options'] = options

	#####################################################################

	if options.authors:
		print('Jerome ODIER, Christophe SMEKENS')
		sys.exit()

	if options.version:
		print('code-builder-1.0')
		sys.exit()

	#####################################################################

	list = [
		'CodeBuilder.xml',
	]

	if   len(args) == 0:
		fileName = os.path.normcase(list[0])
	elif len(args) == 1:
		fileName = os.path.normcase(args[0])
	else:
		parser.error('syntax error')
		sys.exit(1)

	#####################################################################

	if not os.path.exists(fileName):
		parser.error('incorrect filename \'%s\'' % fileName)
		sys.exit(1)

	#####################################################################

	try:
		if options.lang:
			__import__('cb.lang.%s' % options.lang)
		else:
			__import__('cb.lang.%s' %     'c'     )

		CTX['lang'] = sys.modules['cb.lang.c']

	except ImportError, e:
		parser.error('incorrect language \'%s\'' % options.lang)
		sys.exit(1)

	#####################################################################

	codebuilder_load(fileName)

	codebuilder_check()
	codebuilder_emit()

#############################################################################

